# the original program, more or less
# 9    # 0:
# 10   # 1: push 10
# 9    # 2:
# 100  # 3: push 100
# 4    # 4: store @100
# # topofloop
# 9
# 65   # push 65
# 2    # print
# 9
# 100  # push 100
# 5    # read @100
# 9
# 1    # push 1
# 6    # sub
# 9
# 100  # push 100
# 4    # store @100
# 9
# 4    # push @topofloop
# 9
# 100
# 5    # pop @100
# 8    # jlz # if TOS<0, goto top of loop

# the "straight" translation
push 10
push 100
store
:topofloop
push 65
print
push 100
read
push 1
sub
push 100
store
push @topofloop
#      ^- unsupported, so we do it manually -v
# push 4 # a quirk in the VM is that it increments the IP early, so we use "4" to jump and start at location 5 (zero-based)
push 100
read
jlz

# this has a bunch of syntactical sugar I'm uncertain of
# store 10 @100
# :topofloop
# print 65
# read @100
# dec
# store @100
# push @topofloop
# read @100
# jlz

